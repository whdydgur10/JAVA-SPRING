<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.project.dao.ProductDao">
	<select id="getContentRemark" resultType="kr.green.project.vo.ContentremarkVo">
		select * from contentremark where enrollmentNum = #{num}
	</select>
	<select id="getContentSize" resultType="kr.green.project.vo.ContentsizeVo">
		select * from contentsize where enrollmentNum = #{num}
	</select>
	<select id="getContentSizeText" resultType="kr.green.project.vo.ContentsizetextVo">
		select * from contentsizetext where enrollmentNum = #{num}
	</select>
	<select id="getThumbnailImage" resultType="kr.green.project.vo.ThumbnailVo">
		select * from thumbnail where enrollmentNum = #{num}
	</select>
	<select id="getContentImage" resultType="kr.green.project.vo.ContentimageVo">
		select * from contentimage where enrollmentNum = #{num}
	</select>
	<select id="getProductEnrollmentList" resultType="kr.green.project.vo.ProductenrollmentVo">
		select * from productenrollment 
							join (select categoryNum from category where mainCategory = #{pri.mainCategory}
																<if test="pri.middleCategory.length != 0">
																and middleCategory = #{pri.middleCategory}
																</if>
																<if test="pri.subCategory.length != 0">
																and subCategory = #{pri.subCategory}
																</if>
							) as category
							on productenrollment.categoryNum = category.categoryNum
							where isDel = 'N'
							<if test="pri.search.length != 0">
								and productenrollment.mainTitle like concat ('%',#{pri.search},'%')
								or productenrollment.subTitle like concat ('%',#{pri.search},'%')
							</if>
							limit #{pri.pageStart}, #{pri.perPageNum}
	</select>
	<select id="countProductEnrollment" resultType="int">
		select count(*) from productenrollment 
							join (select categoryNum from category where mainCategory = #{pri.mainCategory}
																<if test="pri.middleCategory.length != 0">
																and middleCategory = #{pri.middleCategory}
																</if>
																<if test="pri.subCategory.length != 0">
																and subCategory = #{pri.subCategory}
																</if>
							) as category
							on productenrollment.categoryNum = category.categoryNum
							<if test="pri.search.length != 0">
								and productenrollment.mainTitle like concat ('%',#{pri.search},'%')
								or productenrollment.subTitle like concat ('%',#{pri.search},'%')
							</if>
							where isDel = 'N'
	</select>
	<select id="getEnrollmentThumbnailList" resultType="kr.green.project.dto.EnrollmentThumbnailDto">
		select * from productenrollment 
							join (select min(thumbnailNum) as thumbnailNum, thumbnailImage from thumbnail where enrollmentNum = #{enroll.num}) as thumb
							where productenrollment.num = #{enroll.num}
	</select>
	<select id="getShoppingBasketList" resultType="kr.green.project.vo.ShoppingbasketVo">
		select * from shoppingbasket where isPurchase = 'N'
	</select>
	<insert id="insertShoppingBasket">
		insert into shoppingbasket(userId, enrollNum, purchase, basketDate, optionCode) values(#{userId}, #{enrollNum}, #{purchase}, #{today}, #{optionCode})
	</insert>
	<update id="updateDecOptionPurchase">
		update `option` set amount = amount - #{purchase}, purchase = purchase + #{purchase} where optionCode = #{optionCode}
	</update>
	<update id="updateIncOptionPurchase">
		update `option` set purchase = purchase - #{purchase}, amount = amount + #{purchase} where optionCode = #{optionCode}
	</update>
	<insert id="insertPurchase">
		insert into purchase(userId, orderDate) values(#{pu.userId}, #{pu.orderDate})
	</insert>
	<select id="getPurchaseNum" resultType="int">
		select max(num) from purchase where userId = #{id} and isDel = 'N'
	</select>
	<insert id="insertPurchaseListBasket">
		insert into purchaselist(purchaseNum, purchase, shoppingNum, optionCode, enrollNum) values(#{purchaseNum}, #{purchase.purchase}, #{purchase.shoppingNum}, #{purchase.optionCode}, #{purchase.enrollNum})
	</insert>
	<insert id="insertPurchaseListOrder">
		insert into purchaseList(purchaseNum, enrollNum, purchase, optionCode) value(#{purchaseNum}, #{purchase.enrollNum}, #{purchase.purchase}, #{purchase.optionCode})
	</insert>
	<select id="getPurchaseTonum" resultType="kr.green.project.vo.PurchaseVo">
		select * from purchase where num = #{num} and isDel = 'N'
	</select>
	<select id="getPurchaseList" resultType="kr.green.project.vo.PurchaselistVo">
		select * from purchaselist where purchaseNum = #{purchaseNum} and isCancel = 'N'
	</select>
	<update id="updatePurchasePrice">
		update purchase set price = #{price}, deliveryPrice = #{delibery} where num = #{purchaseNum}
	</update>
	<select id="getDeliveryPrice" resultType="int">
		select deliveryPrice from purchase where num = #{purchaseNum}
	</select>
	<update id="updatePurchase">
		update purchase set deposit = #{purchase.deposit}, depositDate = #{purchase.depositDate}, isPoint = #{purchase.isPoint}, isCoupon = #{purchase.isCoupon}, price = #{purchase.price}, givePoint = #{purchase.givePoint}, usePoint = #{purchase.usePoint}
			,payment = #{purchase.payment}, addressNum = #{purchase.addressNum} where num = #{purchase.num}
	</update>
	<select id="getPurchaseListDeposit" resultType="kr.green.project.vo.PurchaseVo">
		select * from purchase where deposit = 'N' and isDel = 'N'
	</select>
	<update id="deletePurchase">
		update purchase set isDel = 'Y' where num = #{num}
	</update>
	<select id="getEnrollNum" resultType="int">
		select enrollNum from shoppingbasket where shoppingNum = #{shoppingNum}
	</select>
	<select id="getPurchaseListConfirm" resultType="kr.green.project.vo.PurchaseVo">
		select * from purchase where isConfirm = 'N' and confirmDate is not null
	</select>
</mapper>
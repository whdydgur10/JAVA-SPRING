<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.project.dao.ProductDao">
	<select id="getContentRemark" resultType="kr.green.project.vo.ContentremarkVo">
		select * from project.contentremark where enrollmentNum = #{num}
	</select>
	<select id="getContentSize" resultType="kr.green.project.vo.ContentsizeVo">
		select * from project.contentsize where enrollmentNum = #{num}
	</select>
	<select id="getContentSizeText" resultType="kr.green.project.vo.ContentsizetextVo">
		select * from project.contentsizetext where enrollmentNum = #{num}
	</select>
	<select id="getThumbnailImage" resultType="kr.green.project.vo.ThumbnailVo">
		select * from project.thumbnail where enrollmentNum = #{num}
	</select>
	<select id="getContentImage" resultType="kr.green.project.vo.ContentimageVo">
		select * from project.contentimage where enrollmentNum = #{num}
	</select>
	<select id="getProductEnrollmentList" resultType="kr.green.project.vo.ProductenrollmentVo">
		select * from project.productenrollment 
							join (select categoryNum from category where mainCategory = #{cri.mainCategory}
																<if test="cri.middleCategory.length != 0">
																and middleCategory = #{cri.middleCategory}
																</if>
																<if test="cri.subCategory.length != 0">
																and subCategory = #{cri.subCategory}
																</if>
							) as category
							on productenrollment.categoryNum = category.categoryNum
							<if test="cri.search.length != 0">
								and productenrollment.mainTitle like concat ('%',#{cri.search},'%')
								or productenrollment.subTitle like concat ('%',#{cri.search},'%')
							</if>
							where isDel = 'N'
							limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="countProductEnrollment" resultType="int">
		select count(*) from project.productenrollment 
							join (select categoryNum from category where mainCategory = #{cri.mainCategory}
																<if test="cri.middleCategory.length != 0">
																and middleCategory = #{cri.middleCategory}
																</if>
																<if test="cri.subCategory.length != 0">
																and subCategory = #{cri.subCategory}
																</if>
							) as category
							on productenrollment.categoryNum = category.categoryNum
							<if test="cri.search.length != 0">
								and productenrollment.mainTitle like concat ('%',#{cri.search},'%')
								or productenrollment.subTitle like concat ('%',#{cri.search},'%')
							</if>
							where isDel = 'N'
	</select>
	<select id="getEnrollmentThumbnailList" resultType="kr.green.project.dto.EnrollmentThumbnailDto">
		select * from project.productenrollment 
							join (select min(thumbnailNum) as thumbnailNum, thumbnailImage from thumbnail where enrollmentNum = #{enroll.num}) as thumb
							where productenrollment.num = #{enroll.num}
	</select>
	<select id="getShoppingBasketList" resultType="kr.green.project.vo.ShoppingbasketVo">
		select * from project.shoppingbasket where isPurchase = 'N'
	</select>
	<insert id="insertShoppingBasket">
		insert into project.shoppingbasket(userId, enrollNum, purchase, basketDate, optionCode) values(#{userId}, #{enrollNum}, #{purchase}, #{today}, #{optionCode})
	</insert>
	<update id="updateDecOptionPurchase">
		update project.option set amount = amount - #{purchase}, purchase = purchase + #{purchase} where optionCode = #{optionCode}
	</update>
	<update id="updateIncOptionPurchase">
		update project.option set purchase = purchase - #{purchase}, amount = amount + #{purchase} where optionCode = #{optionCode}
	</update>
	<insert id="insertPurchase">
		insert into purchase(userId, orderDate) values(#{pu.userId}, #{pu.orderDate})
	</insert>
	<select id="getPurchaseNum" resultType="int">
		select max(num) from purchase where userId = #{id}
	</select>
	<insert id="insertPurchaseListBasket">
		insert into project.purchaselist(purchaseNum, purchase, shoppingNum, optionCode) values(#{purchaseNum}, #{purchase.purchase}, #{purchase.shoppingNum}, #{purchase.optionCode})
	</insert>
	<insert id="insertPurchaseListOrder">
		insert into project.purchaseList(purchaseNum, enrollNum, purchase, optionCode) value(#{purchaseNum}, #{purchase.enrollNum}, #{purchase.purchase}, #{purchase.optionCode})
	</insert>
	<select id="getPurchaseTonum" resultType="kr.green.project.vo.PurchaseVo">
		select * from purchase where num = #{num}
	</select>
	<select id="getPurchaseList" resultType="kr.green.project.vo.PurchaselistVo">
		select * from purchaselist where purchaseNum = #{purchaseNum}
	</select>
	<update id="updatePurchasePrice">
		update purchase set price = #{price}, deliveryPrice = #{delibery} where num = #{purchaseNum}
	</update>
	<select id="getDeliveryPrice" resultType="int">
		select deliveryPrice from purchase where num = #{purchaseNum}
	</select>
</mapper>
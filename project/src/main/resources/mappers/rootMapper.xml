<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="kr.green.project.dao.RootDao">
  	<select id="getProductOptionList" resultType="kr.green.project.dto.ProductOptionDto">
  		select * from product
				join project.option 
		        where product.code = productCode
  				<if test="productCode != null">
  					and product.code like concat('%',#{productCode},'%')
  				</if>
  				<if test="rootCri.type == 'codedown'">
  				order by code desc
  				</if>
  				<if test="rootCri.type == 'codeup'">
  				order by code asc
  				</if>
  				<if test="rootCri.type == 'namedown'">
  				order by name desc
  				</if>
  				<if test="rootCri.type == 'nameup'">
  				order by name asc
  				</if>
  				<if test="rootCri.type == 'sizedown'">
  				order by sizeNum desc
  				</if>
  				<if test="rootCri.type == 'sizeup'">
  				order by sizeNum asc
  				</if>
  				<if test="rootCri.type == 'colordown'">
  				order by color desc
  				</if>
  				<if test="rootCri.type == 'colorup'">
  				order by color asc
  				</if>
  				<if test="rootCri.type == 'amountdown'">
  				order by amount desc
  				</if>
  				<if test="rootCri.type == 'amountup'">
  				order by amount asc
  				</if>
  				<if test="rootCri.type == 'purchasedown'">
  				order by purchase desc
  				</if>
  				<if test="rootCri.type == 'purchaseup'">
  				order by purchase asc
  				</if>
  				limit #{rootCri.pageStart} , #{rootCri.perPageNum}
  	</select>
  	<update id="updateAmount">
  		update project.option set amount = #{amount} where optionCode = #{optionCode}
  	</update>
  	<select id="getProductCode" resultType="kr.green.project.vo.ProductVo">
  		select * from product where code = #{code}		
  	</select>
  	<select id="getOptionSize" resultType="kr.green.project.vo.OptionVo">
  		select * from project.option where productCode = #{productCode} group by size order by sizeNum
  	</select>
  	<select id="getOptionColor" resultType="kr.green.project.vo.OptionVo">
  		select color, sum(amount) as allAmount, productCode  from project.option where productCode = #{productCode} group by color
  	</select>
  	<select id="countOption" resultType="int">
  		select count(*) from product
				join project.option 
		        where product.code = productCode
  				<if test="productCode != null">
  					and product.code like concat('%',#{productCode},'%')
  				</if>
  				<if test="rootCri.type == 'codedown'">
  				order by code desc
  				</if>
  				<if test="rootCri.type == 'codeup'">
  				order by code asc
  				</if>
  				<if test="rootCri.type == 'namedown'">
  				order by name desc
  				</if>
  				<if test="rootCri.type == 'nameup'">
  				order by name asc
  				</if>
  				<if test="rootCri.type == 'sizedown'">
  				order by sizeNum desc
  				</if>
  				<if test="rootCri.type == 'sizeup'">
  				order by sizeNum asc
  				</if>
  				<if test="rootCri.type == 'colordown'">
  				order by color desc
  				</if>
  				<if test="rootCri.type == 'colorup'">
  				order by color asc
  				</if>
  				<if test="rootCri.type == 'amountdown'">
  				order by amount desc
  				</if>
  				<if test="rootCri.type == 'amountup'">
  				order by amount asc
  				</if>
  				<if test="rootCri.type == 'purchasedown'">
  				order by purchase desc
  				</if>
  				<if test="rootCri.type == 'purchaseup'">
  				order by purchase asc
  				</if>
  	</select>
  	<insert id="insertProduct">
  		insert into product values(#{product.code}, #{product.name}, #{product.price}, #{product.gender}, #{product.modify})
  	</insert>
  	<insert id="insertOption">
  		insert into project.option(optionCode, size, color, productCode, sizeNum) values(#{option.optionCode}, #{option.size}, #{option.color}, #{option.productCode}, #{option.sizeNum})
  	</insert>
  	<delete id="deleteSize">
  		delete from project.option where productCode = #{productCode} and size = #{size}
  	</delete>
  	<delete id="deleteColor">
  		delete from project.option where productCode = #{productCode} and color = #{color}
  	</delete>
  	<update id="updateProductModify">
  		update product set modify = #{modify} where code = #{code}
  	</update>
  	<update id="updateProduct">
  		update product set name = #{product.name}, price = #{product.price}, gender = #{product.gender}, modify = #{product.modify}
  	</update>
  	<select id="getOption" resultType="kr.green.project.vo.OptionVo">
  		select * from project.option where productCode = #{productCode} and size = #{size} and color = #{color}
  	</select>
  	<select id="getEnrollment" resultType="kr.green.project.vo.ProductenrollmentVo">
  		select * from project.productenrollment where productCode = #{code}
  	</select>
  	<insert id="insertCategory">
  		insert into category(mainCategory, middleCategory, subCategory) values(#{category.mainCategory}, #{category.middleCategory}, #{category.subCategory})
  	</insert>
  	<select id="getMiddleCategoryList" resultType="String">
  		select middleCategory from category where mainCategory = #{category} group by middleCategory
  	</select>
  	<select id="getSubCategoryList" resultType="String">
  		select subCategory from category where mainCategory = #{category.mainCategory} and middleCategory = #{category.middleCategory} group by subCategory
  	</select>
  	<insert id="insertEnrollment">
  		insert into productenrollment(productCode, discount, categoryNum, finalPrice, discountPercent) values(#{enrollment.productCode}, #{enrollment.discount}, #{enrollment.categoryNum}, #{enrollment.finalPrice}, #{enrollment.discountPercent})
  	</insert>
  	<select id="getCategoryNum" resultType="int">
  		select categoryNum from category where mainCategory = #{category.mainCategory} and middleCategory = #{category.middleCategory} and subCategory = #{category.subCategory}
  	</select>
  	<select id="getEnrollmentNum" resultType="int">
  		select num from productenrollment where productNum = #{productNum}
  	</select>
  	<select id="getProductenrollment" resultType="kr.green.project.vo.ProductenrollmentVo">
  		select * from productenrollment where num = #{num}
  	</select>
  	<select id="getEnrollmentString" resultType="kr.green.project.vo.ProductenrollmentVo">
  		select * from productenrollment where productCode = #{productCode}
  	</select>
  	<select id="getOptionSizeColor" resultType="kr.green.project.vo.OptionVo">
  		select size, productCode, sizeNum, amount from project.option where productCode = #{productCode} and color = #{color} order by sizeNum
  	</select>
  	<update id="updateTitle">
  		update productenrollment set mainTitle = #{enrollment.mainTitle}, subTitle = #{enrollment.subTitle} where num = #{enrollmentNum}
  	</update>
  	<insert id="insertThumnailImage">
  		insert into thumbnail(enrollmentNum, thumbnailImage) values(#{enrollmentNum}, #{fileName})
  	</insert>
  	<insert id="insertContentImage">
  		insert into contentimage(enrollmentNum, contentImage) values(#{enrollmentNum}, #{fileName})
  	</insert>
  	<insert id="insertContentremark">
  		insert into contentremark(contentElasticity, contentLining, contentSeethrough, contentThickness, contentWeight, contentDry, contentRemarkText, enrollmentNum) 
  			values(#{remark.contentElasticity}, #{remark.contentLining}, #{remark.contentSeethrough}, #{remark.contentThickness}, #{remark.contentWeight}, #{remark.contentDry}, #{remark.contentRemarkText}, #{enrollmentNum})
  	</insert>
  	<insert id="insertContentsize">
  		insert into contentsize(contentSize, contentLength, contentShoulder, contentChest, contentSleeve, enrollmentNum)
  			values(#{size.contentSize}, #{size.contentLength}, #{size.contentShoulder}, #{size.contentChest}, #{size.contentSleeve}, #{enrollmentNum})
  	</insert>
  	<insert id="insertContentSizeText">
  		insert into contentsizetext(enrollmentNum, contentSizeText) values(#{enrollmentNum}, #{contentSizeText})
  	</insert>
  </mapper>